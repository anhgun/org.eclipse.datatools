<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>

   <extension-point id="texthover" name="SQL Editor Text Hover" schema="schema/texthover.exsd"/>

     <!-- Register the SQL Editor and the Action Contributor class for the SQL Editor. -->
   <extension
         point="org.eclipse.ui.editors">
      <editor
            id="org.eclipse.datatools.sqltools.sqleditor.SQLEditor"
            name="%sqlEditorName"
            icon="icons/sql_editor.gif"
            class="org.eclipse.datatools.sqltools.sqleditor.SQLEditor"
			contributorClass="org.eclipse.datatools.sqltools.sqleditor.internal.SQLEditorActionContributor">
      </editor>
   </extension>

<!-- Register the DocumentSetupParticipant class for the SQL Editor. -->
<!-- Note: In order to make the SQL Editor more reusable, the DocumentSetupParticipant 
     is set up in the main SQL Editor class rather than here.
   <extension
         point="org.eclipse.core.filebuffers.documentSetup"
         id="SQLEditorDocumentSetupParticipant"
         name="%documentSetupParticipantName">
      <participant
            extensions="%sqlEditorFileExtensions"
            class="org.eclipse.datatools.sqltools.sqleditor.SQLEditorDocumentSetupParticipant">
      </participant>
   </extension>
-->

   <!-- Register a factory for recreating SQLEditorFileEditorInput objects when
        the Workbench is restarted. -->
   <extension 
      point = "org.eclipse.ui.elementFactories"> 
         <factory 
            id ="org.eclipse.datatools.sqltools.sqleditor.SQLEditorInputFactory" 
            class="org.eclipse.datatools.sqltools.sqleditor.SQLEditorInputFactory"> 
         </factory> 
   </extension> 

   <!-- perspectives -->      
   <extension
         point="org.eclipse.ui.perspectives">
      <perspective
            name="Database Development"
            icon="icons/DB_dev_perspective.gif"
            class="org.eclipse.datatools.sqltools.sqleditor.perspectives.EditorPerspective"
            id="org.eclipse.datatools.sqltools.sqleditor.perspectives.EditorPerspective">
      </perspective>
   </extension>
   
    <!-- next are how to hook DTP SQL Editor perspective/actions with other perspectives/actions of eclipse -->
    <extension point="org.eclipse.ui.perspectiveExtensions"> 
        <!-- extension to the DTP editor perspective -->
        <perspectiveExtension
             targetID="org.eclipse.datatools.sqltools.sqleditor.perspectives.EditorPerspective">
	    	 <actionSet
               id="org.eclipse.debug.ui.breakpointActionSet">
             </actionSet>


             <!-- Add View Shortcuts !-->
            <viewShortcut id="org.eclipse.datatools.connectivity.DataSourceExplorerNavigator" />
            <viewShortcut id="org.eclipse.datatools.sqltools.result.resultView" />
                        
            <!-- Add Perspective shortcuts !-->
            <perspectiveShortcut id="ConfigPerspective" />
            <perspectiveShortcut id="org.eclipse.datatools.sqltools.debugger.perspectives.DebuggerPerspective" />
                  
        </perspectiveExtension>

    </extension>

   <extension
         point="org.eclipse.ui.contexts">
      <context
            name="%context.editingSQL.name"
            description="%context.editingSQL.description"
            parentId="org.eclipse.ui.textEditorScope"
            id="org.eclipse.datatools.sqltools.SQLEditorScope">
      </context>
   </extension>
   
    <extension
         point="org.eclipse.ui.commands">
      <category
            name="%category.datatools.name"
            description="%category.datatools.description"
            id="org.eclipse.datatools.sqltools.sqleditor.category">
      </category>
      <command
            categoryId="org.eclipse.datatools.sqltools.sqleditor.category"
            name="%DatabaseManagement.command.execute"
            id="org.eclipse.datatools.sqltools.sqleditor.ExecuteSQLAction"/>
      <command
            categoryId="org.eclipse.datatools.sqltools.sqleditor.category"
            name="%DatabaseManagement.command.execute.select"
            id="org.eclipse.datatools.sqltools.sqleditor.ExecuteSelectionAction"/>
    </extension>
    
    <extension
         point="org.eclipse.ui.bindings">
      <!--  win32:  M1=CTRL,    M2=SHIFT, M3=ALT, M4=-
            carbon: M1=COMMAND, M2=SHIFT, M3=ALT, M4=CTRL -->
      <key
            sequence="M1+M3+X"
            contextId="org.eclipse.datatools.sqltools.SQLEditorScope"
            commandId="org.eclipse.datatools.sqltools.sqleditor.ExecuteSQLAction"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"/>
      <key
            sequence="M3+X"
            contextId="org.eclipse.datatools.sqltools.SQLEditorScope"
            commandId="org.eclipse.datatools.sqltools.sqleditor.ExecuteSelectionAction"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"/>
    </extension>
    
        <!-- Syntax validation problem marker -->
    <extension id="syntaxproblem" point="org.eclipse.core.resources.markers" name="%sqlProblemName">
            <super type="org.eclipse.core.resources.problemmarker"/>
            <super type="org.eclipse.core.resources.textmarker"/>
            <persistent value="false"/>
            <attribute name="id"/>
            <attribute name="flags"/>
            <attribute name="arguments"/>
    </extension>   

    <!-- Portability check marker -->
    <extension id="portabilitytask" name="%sqlPortabilityName" point="org.eclipse.core.resources.markers">
        <super type="org.eclipse.core.resources.taskmarker"/> 
        <persistent value="false"/>
    </extension>
    
</plugin>
